// Uncomment or modify the parameters below to fit your dataset and setup choices
params {
// Protein fasta input
 proteinFile = "/work_ifs/sukmb447/projects/ring_transcript/results/1.process.orthofinder/1.gather.format.data/a_aurita.fa"
 // GFF input
 // gffFile = "/work_ifs/sukmb447/projects/ring_transcript/results/3.annotate.proteins/a_aurita.gff"
 // Whether to run pipeline in debug mode or not
 debug = "false"
 // Whether to check and clean GFF input file
 gffclean = true
 // Whether to generate stats from GFF input file
 gffstats = true
 // Processing sizes below
 // Number of protein sequences per chunk (used as fallback)
 chunkSize = 25
 // Number of protein sequences per chunk when using BLAST (or DIAMOND)
 // You can normally use a far higher number if using DIAMOND
 chunkBlastSize = 50
 // Number of protein sequences per chunk when using InterProScan
 chunkIPSSize = 25
 // Number of protein sequences per chunk when using KofamKOALA
 chunkKoalaSize = 100000
 // Number of protein sequences per chunk when submitting to web processes (CD-Search for now)
 chunkWebSize = 1000
 // Number of chunks to be used when running in debug mode (e.g., for facllback processes this would be 5*25=125 protein sequences)
 debugSize = 2
 evalue = "0.00001"
 diamond = true
 // Base DB Path
 dbPath = "/work_ifs/sukmb447/db/FA-nf"
 // Blast DB. Check README for details
 // blastDbPath = "/work_ifs/sukmb447/db/FA-nf/ncbi/202112/blastdb/db/swissprot"
 // Instance from where to retrieve GO mappings. You can set up your own from: https://github.com/toniher/gogoAPI
 gogourl = "http://gogo.test.crg.eu/api"
 // Maximum number of hits to consider (up to 30 by default))
 // gogohits = 30
 // Modes of retrieval from BLAST matches (common, most, all)
 blastAnnotMode = "common"
 speciesName = "a_aurita"
 // Pre-downloaded OBO file with GO descriptions. Otherwise pipeline will download it
 // oboFile = "/work_ifs/sukmb447/projects/ring_transcript/results/3.annotate.proteins/a_aurita/dataset/gene_ontology_ext.obo"
 // Interproscan Version
 iprscanVersion = "5.48-83.0"
 // Defined Interproscan Data directory. It will override version parameter above.
 // ipscandata = "/work_ifs/sukmb447/db/FA-nf/iprscan/5.48-83.0"
 // Directory where to store intermediary Interproscan files (ensure there is enough space)
 ipscantmp = "/work_ifs/sukmb447/projects/ring_transcript/results/3.annotate.proteins/a_aurita/tmp/"
 // Kegg species codes to retrieve ortholog information. Codes from: https://www.genome.jp/kegg/catalog/org_list.html
 kegg_species = "nve, mmu, cel, hmg, aqu, dme"
 // Kofam version used
 koVersion = "2021-05-02"
 // Profiles and KEGG codes list from ftp://ftp.genome.jp/pub/db/kofam/
 kolist = "/work_ifs/sukmb447/db/FA-nf/kegg/2021-05-02/ko_list"
 koprofiles = "/work_ifs/sukmb447/db/FA-nf/kegg/2021-05-02/profiles"
 // KO entries. Can be retrieved in advance using: https://github.com/toniher/biomirror/tree/master/files/kegg
 koentries = "/work_ifs/sukmb447/db/FA-nf/kegg/2021-05-02/ko_store"
 // Database engine. Specify MySQL (otherwise 'SQLite' will be used)
 dbEngine = "SQLite"
 // Database name. If it does not exist, if the user has enough permissions it will be created
 dbname = "a_aurita"
 // Database user name
 // dbuser = "test"
 // Database user password
 // dbpass = "test"
 // Port of the MySQL engine (3306 default)
 // dbport = 12345
 // The host where the MySQL engine is located. Skip it if using the MySQL wrapper
 // dbhost = 0.0.0.0
 // If using the wrapper below, where MySQL data will be stored
 // mysqldata = "/work_ifs/sukmb447/projects/ring_transcript/results/3.annotate.proteins/a_aurita/mysql/"
 // If using the wrapper below, where MySQL instance logs will be stored
 // mysqllog = "/work_ifs/sukmb447/projects/ring_transcript/results/3.annotate.proteins/a_aurita/tmp/"
 // If using the wrapper below, which Singularity/Docker image will be used
 // mysqlimg = "https://biocore.crg.eu/singularity/mariadb-10.3.sif"
 // Where results are stored
 resultPath = "/work_ifs/sukmb447/projects/ring_transcript/results/3.annotate.proteins/a_aurita/results/"
 // Where log files are stored
 stdoutLog = "/work_ifs/sukmb447/projects/ring_transcript/results/3.annotate.proteins/a_aurita/logs/functional_annotation.stdout"
 stderrLog = "/work_ifs/sukmb447/projects/ring_transcript/results/3.annotate.proteins/a_aurita/logs/functional_annotation.stderr"
 // Logging verbosity for some data upload processes
 loglevel = "info"
 // Uncomment and put your mail if your setup allows sending emails
 // email = "yourmail@yourdomain"
 // Comment the lines below to execute those analyses
 skip_cdSearch = true
 skip_sigtarp  = true
}
